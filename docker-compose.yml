<<<<<<< HEAD
# Updated docker-compose with separate MongoDB service
services:
  # MongoDB database (pre-built image)
  mongodb:
    image: mongo:7.0
    container_name: claw-mongodb
=======
version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: v0-mongodb
>>>>>>> d07d2a6 (Init API)
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
<<<<<<< HEAD
      MONGO_INITDB_DATABASE: claw_api
=======
      MONGO_INITDB_DATABASE: v0_clone
>>>>>>> d07d2a6 (Init API)
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
<<<<<<< HEAD
      - claw-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ismaster')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
=======
      - v0-network
>>>>>>> d07d2a6 (Init API)

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
<<<<<<< HEAD
    container_name: claw-redis
=======
    container_name: v0-redis
>>>>>>> d07d2a6 (Init API)
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
<<<<<<< HEAD
      - claw-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main API application
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: claw-api
=======
      - v0-network

  # Main API application
  api:
    build: .
    container_name: v0-api
>>>>>>> d07d2a6 (Init API)
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      NODE_ENV: production
      PORT: 8000
      HOST: 0.0.0.0
<<<<<<< HEAD
      MONGODB_URL: mongodb://admin:password123@mongodb:27017/claw_api?authSource=admin
      DB_NAME: claw_api
=======
      MONGODB_URL: mongodb://admin:password123@mongodb:27017/v0_clone?authSource=admin
      DB_NAME: v0_clone
>>>>>>> d07d2a6 (Init API)
      WORKSPACE_DIR: /app/workspace
      
      # LLM API Keys (set these in your environment)
      HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}
      GROQ_API_KEY: ${GROQ_API_KEY}
      OLLAMA_URL: http://ollama:11434
      
      # Redis URL
      REDIS_URL: redis://redis:6379
    volumes:
      - workspace_data:/app/workspace
      - ./logs:/app/logs
    depends_on:
<<<<<<< HEAD
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - claw-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
=======
      - mongodb
      - redis
    networks:
      - v0-network
>>>>>>> d07d2a6 (Init API)

  # Ollama for local LLM (optional)
  ollama:
    image: ollama/ollama:latest
<<<<<<< HEAD
    container_name: claw-ollama
=======
    container_name: v0-ollama
>>>>>>> d07d2a6 (Init API)
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
<<<<<<< HEAD
      - claw-network
=======
      - v0-network
    # Uncomment if you have GPU support
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
>>>>>>> d07d2a6 (Init API)

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
<<<<<<< HEAD
    container_name: claw-nginx
=======
    container_name: v0-nginx
>>>>>>> d07d2a6 (Init API)
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
<<<<<<< HEAD
      api:
        condition: service_healthy
    networks:
      - claw-network
=======
      - api
    networks:
      - v0-network
>>>>>>> d07d2a6 (Init API)

volumes:
  mongodb_data:
  redis_data:
  ollama_data:
  workspace_data:

networks:
<<<<<<< HEAD
  claw-network:
=======
  v0-network:
>>>>>>> d07d2a6 (Init API)
    driver: bridge
