<<<<<<< HEAD
=======
version: '3.8'

>>>>>>> d07d2a6 (Init API)
services:
  mongodb:
    image: mongo:7.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - mongodb_data:/data/db
    networks:
<<<<<<< HEAD
      - claw-network
=======
      - v0-network
>>>>>>> d07d2a6 (Init API)
    # Don't expose port in production

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    networks:
<<<<<<< HEAD
      - claw-network
    # Don't expose port in production

  api:
    image: your-registry.com/claw-api:latest
=======
      - v0-network
    # Don't expose port in production

  api:
    image: your-registry.com/Claw-api:latest
>>>>>>> d07d2a6 (Init API)
    restart: always
    environment:
      NODE_ENV: production
      PORT: 8000
      MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${DB_NAME}?authSource=admin
      DB_NAME: ${DB_NAME}
      HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}
      GROQ_API_KEY: ${GROQ_API_KEY}
      REDIS_URL: redis://redis:6379
    volumes:
      - workspace_data:/app/workspace
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
<<<<<<< HEAD
      - claw-network
=======
      - v0-network
>>>>>>> d07d2a6 (Init API)
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
<<<<<<< HEAD
      - claw-network
=======
      - v0-network
>>>>>>> d07d2a6 (Init API)

volumes:
  mongodb_data:
  redis_data:
  workspace_data:

networks:
<<<<<<< HEAD
  claw-network:
=======
  v0-network:
>>>>>>> d07d2a6 (Init API)
    driver: bridge
